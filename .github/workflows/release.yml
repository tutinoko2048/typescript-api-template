name: Release on Push to release Branch

on:
  push:
    branches:
      - release

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm i

      - name: Build
        run: npm run build
        
      - name: Get name from package.json
        id: get_name
        run: |
          PACKAGE_NAME=$(node -p "require('./package.json').name")
          echo "PACKAGE_NAME=$PACKAGE_NAME" >> $GITHUB_ENV

      - name: Get latest tag and increment
        id: get_version
        run: |
          git fetch --tags
          latest_tag=$(git tag --sort=-v:refname | grep '^v[0-9]\+$' | head -n 1)
          if [ -z "$latest_tag" ]; then
            new_tag="v1"
          else
            version_number=${latest_tag#v}
            new_number=$((version_number + 1))
            new_tag="v$new_number"
          fi
          echo "tag=$new_tag" >> $GITHUB_OUTPUT

      - name: Inject header and rename
        run: |
          VERSION="${{ steps.get_version.outputs.tag }}"
          echo "/** $PACKAGE_NAME $VERSION **/" | cat - dist/index.js > tmp && mv tmp dist/index.js
          echo "/** $PACKAGE_NAME $VERSION **/" | cat - dist/index.d.ts > tmp && mv tmp dist/index.d.ts
          mv dist/index.js dist/$PACKAGE_NAME.js
          mv dist/index.d.ts dist/$PACKAGE_NAME.d.ts

      - name: Create zip package
        run: |
          VERSION="${{ steps.get_version.outputs.tag }}"
          cd dist
          zip "${PACKAGE_NAME}_${VERSION}.zip" "${PACKAGE_NAME}.js" "${PACKAGE_NAME}.d.ts"

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.get_version.outputs.tag }}
          name: ${{ steps.get_version.outputs.tag }}
          files: |
            dist/${{ env.PACKAGE_NAME }}.js
            dist/${{ env.PACKAGE_NAME }}.d.ts
            dist/${{ env.PACKAGE_NAME }}_${{ steps.get_version.outputs.tag }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
